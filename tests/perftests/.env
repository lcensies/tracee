PROMETHEUS_ADDR=http://localhost:9090
WEBHOOK_ADDR=http://192.168.81.1:3434

TEST_TYPE=pgbench
TEST_DURATION=60
POST_TEST_SLEEP_SEC=20

DOCKER_INTERACTIVE_FLAG=-d
DOCKER_TRACEE_IMAGE=tracee:events_merging_disabled
# DOCKER_IMAGE=aquasec/tracee:latest

EVENTS_RATE_STATS_FILE=/tmp/tracee/events_rate_metrics.json
EVENTS_STATS_FILE=/tmp/tracee/events_metrics.json
EVENTS_LOST_STATS_FILE=/tmp/tracee/events_lost_metrics.json
TRACEE_CACHE_STATS_FILE=/tmp/tracee/events_cache_metrics.json
FILE_IO_STATS_FILE=/tmp/tracee/file_io_metrics.json
TRACEE_MEMORY_STATS_FILE=/tmp/tracee/agent_memory_metrics.json
TRACEE_BENCHMARK_OUTPUT_FILE=${TRACEE_BENCHMARK_OUTPUT_FILE:-/tmp/tracee/tracee_bench_metrics.json}

TRACEE_CPU_LIMIT=${TRACEE_CPU_LIMIT:-"0.1"}
TRACEE_NO_CONTAINER=false
TRACEE_ROOT=$(git rev-parse --show-toplevel)
TRACEE_CACHE_TYPE=${TRACEE_CACHE_TYPE:-mem}
TRACEE_MEM_CACHE_SIZE=${TRACEE_MEM_CACHE_SIZE:-512}
# TRACEE_MEM_CACHE_SIZE=${TRACEE_MEM_CACHE_SIZE:-512}
TRACEE_DISK_CACHE_SIZE=${TRACEE_DISK_CACHE_SIZE:-16384}
TRACEE_PERF_BUFFER_SIZE=${TRACEE_PERF_BUFFER_SIZE:-1024}
TRACEE_LISTEN_ADDR=http:/localhost:3366
TRACEE_EVENTS_SINK_TIMEOUT=${TRACEE_EVENTS_SINK_TIMEOUT:-5}
TRACEE_LOG_FILE=${TRACEE_LOG_FILE:-/tmp/tracee/tracee.log}
TRACEE_EXE=/tracee/tracee
# TRACEE_EVENTS=security_file_open
# --output [webhook|forward]:[protocol://user:pass@]host:port[?k=v#f]
# --output out-file:/tmp/tracee/tracee.log -
TRACEE_EVENTS=security_file_open,vfs_read,vfs_readv,vfs_write,creat,chmod,fchmod,chown,fchown,lchown,ptrace,setuid,setgid,setpgid,setsid,setreuid,setregid,setresuid,setresgid,setfsuid,setfsgid,init_module,fchownat,fchmodat,setns,process_vm_readv,process_vm_writev,finit_module,memfd_create,move_mount,sched_process_exec,security_inode_unlink,security_socket_connect,security_socket_accept,security_socket_bind,security_sb_mount,net_packet_icmp,net_packet_icmpv6,net_packet_dns_request,net_packet_dns_response,net_packet_http_request,net_packet_http_response
TRACEE_CACHE_FLAGS="--cache cache-type=$TRACEE_CACHE_TYPE --cache mem-cache-size=$TRACEE_MEM_CACHE_SIZE"

# --output [webho3k|forward]:[protocol://user:pass@]host:port[?k=v#f]
# TRACEE_OUTPUT_FILE="/tmp/tracee/output.json"
# TRACEE_OUTPUT_FLAGS="--output json --output out-file:${TRACEE_OUTPUT_FILE}"
TRACEE_OUTPUT_FLAGS="--output none"
# TRACEE_OUTPUT_FLAGS="--output webhook:$WEBHOOK_ADDR"
TRACEE_LOG_FLAGS="--log info --log file:$TRACEE_LOG_FILE"
# TRACEE_FEATURE_FLAGS="--proctree source=events -o option:sort-events"
TRACEE_FEATURE_FLAGS=""

TRACEE_FLAGS="$TRACEE_LOG_FLAGS $TRACEE_FEATURE_FLAGS $TRACEE_OUTPUT_FLAGS $TRACEE_CACHE_FLAGS --metrics --healthz=true  -e $TRACEE_EVENTS"
# TRACEE_FLAGS="--config /etc/tracee/config.yaml"

TRACEE_BENCH_CMD="go run $TRACEE_ROOT/cmd/tracee-bench/main.go --single=true --output json"
TRACEE_BENCHMARK_OUTPUT_FILE=${TRACEE_BENCHMARK_OUTPUT_FILE:-""}

DOCKER_POSTGRES_IMAGE=postgres:16.2

# connection parameters

DATABASE_HOST=postgres
DATABASE_USER=admin
DATABASE_PASSWORD=secret
DATABASE_NAME=pgbench

# TODO: move pgbench to separate file

# pgbench parameters

# Multiply the number of rows generated by the scale factor. For example, -s 100 will create 10,000,000 rows in the pgbench_accounts table. Default is 1. When the scale is 20,000 or larger, the columns used to hold account identifiers (aid columns) will switch to using larger integers (bigint), in order to be big enough to hold the range of account identifiers.
PGBENCH_SCALE=50    # scale factor (keep it higher or equal to concurrent clients)
PGBENCH_CLIENTS=30  # clients or concurrent db sessions
PGBENCH_RATE=15000  # rate limit, number of transactions per second
PGBENCH_THREADS=10  # number of threads to run to manage connections
PGBENCH_DURATION=60 # test duration

# script to use, one of tpcb-like, simple-update, select-only with optional weight
PGBENCH_SCRIPT=tpcb-like

# pg_dump parameters
PG_DUMP_FORMAT=plain
PGBENCH_ROOT=/home/vagrant/pgbench-docker

# DOS_ENABLED=true
DOS_SLEEP_DURATION_SEC=${DOS_SLEEP_DURATION_SEC:-0.018}
DOS_DURATION_SEC=${DOS_DURATION_SEC:-$TEST_DURATION}
DOS_CMD=/app/dos
DOS_N_FAKE_COMMANDS="20000"
DOS_MALICIOUS_COMMAND='>/tmp/some_file && date && echo 123 >> /tmp/other_file && cat /tmp/other_file'
DOS_CPU_LIMIT=${DOS_CPU_LIMIT:-"0.8"}
# DOS_CMD="while true; do cat /etc/passwd && date && sleep 0.2; done"
